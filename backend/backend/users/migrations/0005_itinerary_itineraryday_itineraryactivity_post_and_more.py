# Generated by Django 5.1.1 on 2025-07-28 07:07

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0004_review'),
    ]

    operations = [
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('country', models.CharField(max_length=255)),
                ('share_to_social', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ItineraryDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=datetime.date.today)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('itinerary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='users.itinerary')),
            ],
            options={
                'ordering': ['date'],
                'unique_together': {('itinerary', 'date')},
            },
        ),
        migrations.CreateModel(
            name='ItineraryActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('time', models.TimeField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('estimated_cost', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(choices=[('attraction', 'Attraction'), ('restaurant', 'Restaurant'), ('activity', 'Activity'), ('transport', 'Transport'), ('accommodation', 'Accommodation'), ('shopping', 'Shopping'), ('other', 'Other')], default='attraction', max_length=20)),
                ('order', models.PositiveIntegerField(default=0)),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='users.itineraryday')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('countries_visited', models.JSONField(default=list)),
                ('post_type', models.CharField(choices=[('jurnal', 'Jurnal'), ('recenzie', 'Recenzie'), ('itinerariu', 'Itinerariu'), ('sfaturi', 'Sfaturi & Ghiduri'), ('intrebari', 'Întrebări pentru Comunitate')], max_length=50)),
                ('travel_type', models.CharField(choices=[('solo', 'Solo'), ('family', 'Familie'), ('friends', 'Grup de Prieteni'), ('honeymoon', 'Luna de Miere'), ('business', 'Muncă'), ('guided_tour', 'Tur Ghidat'), ('couple', 'Cuplu'), ('backpacking', 'Backpacking')], max_length=50)),
                ('theme', models.CharField(choices=[('natura', 'Natură'), ('mare', 'Mare'), ('cultura', 'Cultură'), ('gastronomie', 'Gastronomie'), ('festival', 'Festival'), ('relaxare', 'Relaxare'), ('sport', 'Sport')], max_length=50)),
                ('travel_duration', models.CharField(blank=True, max_length=100)),
                ('images', models.JSONField(blank=True, default=list)),
                ('passport_count', models.IntegerField(default=0)),
                ('is_in_journal', models.BooleanField(default=True)),
                ('is_private', models.BooleanField(default=False)),
                ('itinerary_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='users.comment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='users.post')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PostPassport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passports', to='users.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'post')},
            },
        ),
    ]
